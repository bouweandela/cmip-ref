[project]
name = "cmip-ref-root"
version = "0.1.1"
description = "CMIP Rapid Evaluation Framework"
readme = "README.md"
authors = [
  { name= "Jared Lewis", email="jared.lewis@climate-resource.com" }
]
requires-python = ">=3.10"
dependencies = [
    "cmip_ref[postgres]",
    "cmip_ref_core",
    "cmip_ref_metrics_example",
    "cmip_ref_metrics_esmvaltool",
]

[project.license]
text = "Apache-2.0"

[tool.uv]
# These are the project wide development dependencies
# These are the dependencies that are required to run the tests, build the docs, etc.
# Each package can have its own dependencies in its own pyproject.toml file in addition to these.
dev-dependencies = [
    "pytest>=7.3.1",
    "pytest-cov>=4.0.0",
    "pytest-mock >= 3.12",
    "coverage>=7.2.0",
    "mypy>=1.11.0",
    "ruff>=0.6.9",
    "pre-commit>=3.3.1",
    "towncrier>=24.8.0",
    # License checks
    "liccheck>=0.9.2",
    "pip>=24.3.1",
    # Docs
    "mkdocs>=1.6.0",
    "mkdocstrings[python]>=0.25.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-section-index>=0.3.9",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-autorefs>=1.0.1",
    "mkdocs-jupyter>=0.24.0",
    "myst-nb>=1.1.1",
    "jupyterlab>=4.2.0",
    "jupytext>=1.16.3",
    "pandas-stubs>=2.2.3.241009",
    "pytest-loguru>=0.4.0",
    "notebook>=7",
    "bump-my-version>=0.28.1",
    "pytest-regressions>=2.5.0",
    "ipywidgets>=8.1.5",
    "prettyprinter>=0.18.0",
]

[tool.uv.workspace]
members = ["packages/*"]

[tool.uv.sources]
cmip_ref = { workspace = true }
cmip_ref_core = { workspace = true }
cmip_ref_metrics_example = { workspace = true }
cmip_ref_metrics_esmvaltool = { workspace = true }

[tool.coverage.run]
source = ["packages"]
branch = true

[tool.coverage.report]
fail_under = 95
skip_empty = true
show_missing = true
# Regexes for lines to exclude from consideration in addition to the defaults
exclude_also = [
    # Don't complain about missing type checking code:
    "if TYPE_CHECKING",
    # Exclude ... literals
    "\\.\\.\\."
]
omit = [
    # Skip alembic migration files
    "*/migrations/*",
]

[tool.mypy]
strict = true
# prevent unimported libraries silently being treated as Any
disallow_any_unimported = true
# show error codes on failure with context
show_error_codes = true
show_error_context = true
# warn if code can't be reached
warn_unreachable = true
# importing following uses default settings
follow_imports = "normal"
exclude = [
    "migrations",
    "build",
    "dist",
    "notebooks",
    "scripts",
    "stubs",
    "tests",
    "conftest.py"
]
mypy_path = "stubs"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
filterwarnings = [
    # Need to update ecgtools to remove this warning
    'ignore:The `validate_arguments` method is deprecated:pydantic.warnings.PydanticDeprecatedSince20',
]

# We currently check for GPL licensed code, but this restriction may be removed
[tool.liccheck]
authorized_licenses = [
    "bsd",
    "bsd license",
    "BSD 3-Clause",
    "CC0",
    "apache",
    "apache 2.0",
    "apache-2.0",
    "apache software",
    "apache software license",
    "Apache License, Version 2.0",
    "CMU License (MIT-CMU)",
    "isc license",
    "isc license (iscl)",
    "GNU Library or Lesser General Public License (LGPL)",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "LGPLv2+",
    "GNU Lesser General Public License v2 (LGPLv2)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "mit",
    "mit license",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "python software foundation",
    "python software foundation license",
    "zpl 2.1",
]
# This starting list is relatively conservative. Depending on the project, it
# may make sense to move some of these into the authorized list
unauthorized_licenses = [
    "agpl",
    "gnu agpl",
    "gpl v3",
    "gplv3",
    "gpl v2",
    "gplv2",
    "gpl v1",
    "gplv1",
]
dependencies = true
